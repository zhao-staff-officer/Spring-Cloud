<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- IOC(Inverse of control)
      ID:给对象在容器中提供一个唯一标识。用于获取对象
      class：指定类的全限定名。用于反射创建对象。默认情况下调用无参构造函数
      scope:指定对象的作用范围(1:singleton：默认值，单例的（在整个容器中只有一个对象）
                              2:prototype：多例的
                              3:request：将Spring 创建的 Bean 对象存入到 request 域中
                              4:session：将Spring 创建的 Bean 对象存入到 session 域中
                              5:WEB 项目中,应用在 Portlet 环境.如果没有 Portlet 环境那么globalSession 相当于 session)
      init-method：指定类中的初始化方法名称
      destroy-method：指定类中销毁方法名称。比如DataSource的配置中一般需要指定destroy-method=“close
      lazy-init：ApplicationContext实现的默认行为就是在启动时将所有 singleton bean进行实例化。lazy-init可以延迟初始化，设置lazy-init="true"使得Ioc容器在第一次需要bean的时候进行实例化
      bean实例化-factory-method：默认无参构造，静态工厂，实例工厂
    -->
   <bean id="ApplicationDemoEnity" class="com.cloud.staff.apifirst.controller.java.Spring.IOC.ApplicationDemoEntity" scope="singleton"
         init-method="initMenthod" lazy-init="true" factory-method="createStaticBean">
   </bean>

    <!-- 构造方法注入
       constructor-arg
         index:指定参数在构造函数参数列表的索引位置
         name:指定参数在构造函数中的名称
         value:它能赋的值是基本数据类型和 String 类型
         ref:它能赋的值是其他 bean 类型，且必须是在配置文件中配置过的 bean
    -->
    <bean id="ApplicationDemoEnity1" class="com.cloud.staff.apifirst.controller.java.Spring.IOC.ApplicationDemoEntity" scope="singleton">
        <constructor-arg name="name" value="zhangsan"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
    </bean>

    <!--Setter方法注入
       通过bean标签的子标签property来完成，且需要在在类中指定setter方法
    -->
    <bean id="ApplicationDemoEnity2" class="com.cloud.staff.apifirst.controller.java.Spring.IOC.ApplicationDemoEntity" scope="singleton">
        <property name="name" value="lisi"></property>
        <property name="age"  value="19"></property>
    </bean>

    <!--p空间注入
       p名称注入是set方法的一种简写方式，首先需引入p命名空间
    -->
    <bean id="ApplicationDemoEnity3" class="com.cloud.staff.apifirst.controller.java.Spring.IOC.ApplicationDemoEntity" p:name="p空间" p:age="20"></bean>

</beans>